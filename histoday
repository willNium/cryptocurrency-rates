# Comments in bash are made using '#', like this line
# limit represents the number of days since jan 1, 2014
# jan 1, 2014 is 1388534400
limit=$[ ($(date +%s) - 1388534400) / (60 * 60 * 24) ]

# this truncates any decimals
limit=${limit%.*}

echo "checking for data directory"
if [ -e data ]
then
  echo "data directory exists"
else
  echo "creating the data directory"
  mkdir data
fi

# All the currencies of interest
currencies=('ETH' 'XRP' 'LTC' 'XEM' 'DASH'  'XMR' 'STR' 'STEEM' 'REP' 'GNT' 'SJCX' 'BTC' 'GNO')

# loop through currencies
for i in $currencies
do
  # set headers on output text files
  echo "currency,close,timestamp" > data/$i
  # cant convert BTC -> BTC, need to compare to USD
  if [ $i = 'BTC' ]
  then
    curl https://min-api.cryptocompare.com/data/histoday\?fsym\=${i}\&tsym\=USD\&limit\=${limit}\&aggregate\=1\ > response
  else
    curl https://min-api.cryptocompare.com/data/histoday\?fsym\=${i}\&tsym\=BTC\&limit\=${limit}\&aggregate\=1\ > response
  fi
  # for each days worth of data in the response
  day=0
  while [ $day -lt $limit ]
  do
    # grab all the data
    # high=$(cat response | jq ".Data["$day"].high")
    # low=$(cat response | jq ".Data["$day"].low")
    # open=$(cat response | jq ".Data["$day"].open")
    close=$(cat response | jq ".Data["$day"].close")
    time=$(cat response | jq ".Data["$day"].time")
    echo $i","$close","$time >> data/$i
    day=$[ day + 1 ]
  done
  echo "done with "$i
done

echo "done!"

